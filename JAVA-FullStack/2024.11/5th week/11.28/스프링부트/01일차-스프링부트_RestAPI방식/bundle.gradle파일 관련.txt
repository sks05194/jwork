1. Plugins 속성
id 'java'  
- Gradle의 Java 플러그인을 활성화 및 Java 컴파일, 테스트, JAR 패키징 같은 기본 작업을 제공

id 'org.springframework.boot'
- Spring Boot 플러그인을 활성화하고 애플리케이션을 쉽게 빌드, 실행, 테스트할 수 있도록 지원
- Spring Boot 버전 관리와 실행 가능한 JAR 생성 기능을 포함


id 'io.spring.dependency-management'
- 의존성 관리 플러그인으로 Maven의 dependencyManagement와 유사한 기능을 Gradle에서 사용할 수 있도록 지원해 줌
- 프로젝트에서 사용하는 의존성의 버전을 일관성 있게 관리


2. Group & Version
group = 'kr.co'   : 프로젝트의 그룹 이름
version = '0.0.1-SNAPSHOT'  : 프로젝트 버전 정보   ★SNAPSHOT : 개발 중인 버전임을 명시, 없으면 안정화된 버전이라는 의미


3. Java Toolchain
//프로젝트에 사용할 Java 버전을  Java 17을 사용하도록 지정
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

4. Configurations

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}



5. Repositories : 의존성을 다운로드할 원격 저장소를 지정

repositories {
	mavenCentral()       // Maven Central Repository에서 의존성을 가져옴.
}


6. Dependencies : 의존성을 설정할 때 

implementation  : 런타임에도 포함 및 애플리케이션 실행 및 컴파일 시 필요한 의존성을 지정
compileOnly : 컴파일 시에만 사용되며 런타임 시에는 포함되지 않는 의존성을 지정
developmentOnly : 개발 환경에서만 필요한 의존성을 지정. 예) spring-boot-devtools :  개발 시 핫 리로드(자동 재시작)와 같은 기능을 제공
runtimeOnly : 런타임에만 필요한 의존성을 지정.
testImplementation : 테스트 시에만 사용되는 의존성을 지정
testRuntimeOnly : 테스트 실행 시에만 필요한 의존성을 지정

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
spring-boot-starter-thymeleaf: Thymeleaf 템플릿 엔진을 지원하는 의존성.
spring-boot-starter-web: Spring MVC, REST API, Tomcat 서버 지원.
mybatis-spring-boot-starter: MyBatis를 Spring Boot 환경에서 쉽게 사용할 수 있도록 지원
org.projectlombok:lombok : Lombok은 컴파일 시 코드 생성에만 필요
mariadb-java-client :  MariaDB 데이터베이스 드라이버
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

7. Tasks : Gradle의 test 태스크를 구성
tasks.named('test') {
	useJUnitPlatform()
}
Spring Boot는 기본적으로 JUnit5를 사용하므로 useJUnitPlatform()으로 JUnit5 플랫폼에서 테스트를 실행하도록 설정






