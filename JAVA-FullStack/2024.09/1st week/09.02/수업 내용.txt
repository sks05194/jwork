※ 시간의 순서에 따라 기술되었습니다.

1교시
09:40
    EL(Expression Language): 톰캣에서 제공하는 표현언어, 출력의 기능과 메소드 호출, 객체나 변수 등을 쉽게 끌어다 사용할 수 있으며, jsp 기본 스크립트 태그와 액션 태그들의 기능 확장에 용이하다.
    또한 jsp 액션 태그, jstl 등에서 가장 많이 사용하는 언어임.
    단, EL 안에서는 jsp 기본 스크립트 태그, jsp 액션 태그, jstl 태그 등을 사용할 수 없다.

2교시
10:40
    파일이나 라이브러리 기술, 추가 순서
    1. 라이브러리 추가
    2. java 파일이나 .properties 파일 생성 및 추가
    3. jsp, html, css, js 등 필요한 순서대로 기술
    4. WEB-INF 폴더 안의 web.xml에 필요한 코드 기술

3교시
11:40
	session: jsp 내장객체(HttpSession 자료형으로 만든 내장객체)
	브라우저가 종료될때까지 살아있는 내장객체로 대체로 로그인에 관련된 데이터를 저장하는데 사용되는 내장객체임.

	클라이언트가 서버로 요청을 하면 세션 id를 request 객체에 담아 전송을 하는데, 해당 데이터를 받아서 서버는 session 객체를 생성한 뒤 요청을 한 클라이언트의 서버와 1:1 대응되는 session 정보로 sessionid와 연결을 시킨다.

11:45
	request 객체: 요청이 시작된 시점부터 응답이 완료된 시점까지 또는 응답완료 전이라도 리다이렉트를 만나기 전까지 살아있는 객체.

	session 객체: 클라이언트의 요청이 처음 시작된 시점부터 브라우저를 종료하는 시점까지 또는 세션 객체를 초기화 하기 전까지 살아있는 객체.
	서버에서 생성이 되고 서버에서 소멸되는 객체임.
	클라이언트에서 정보를 볼 수 없기 때문에 보안을 필요로 하는 데이터를 저장할 때 사용되는 객체임.

	세션 id: 유일하게 세션 정보중에서 클라이언트에 저장되는 정보
	개발자도구 -> Application탭 -> Cookies -> 해당 도메인 url 클릭하면 해당 세션 id값 확인 가능함.

5교시
15:45
	세션, 쿠키: 웹 서버와 클라이언트 간의 상태를 지속적으로 유지하는 방법
	- 세션: 웹서버에 저장됨.
	▶ 보안성이 높으며, 웹 서버 메모리 용량 내에 저장 가능함.

	- 쿠키: 클라이언트에 저장됨.
	1. 암호화가 되지 않아 보안성이 낮다.
	2. 웹 서버는 웹 브라우저가 전송한 쿠키를 사용해 필요한 데이터를 읽어올 수 있다.
	3. 유효기간 미 설정시 웹 브라우저에 저장(웹 브라우저 닫을 때 삭제)
	4. 유효기간 설정 시 사용자의 PC에 저장됨(유효기간이 지나면 자동으로 삭제)
	5. 쿠키는 그 크기가 하나에 4KB 이하로 제한이 되어 있으며, 총 300개까지 정보를 저장할 수 있다.
	따라서, 최대로 저장 가능한 쿠키의 용량은 1200KB 즉 약 1.2MB

6교시
16:45
	필터(Filter)란:
	요청(Request)과 응답(Response)에 대한 정보들을 변경할 수 있게 개발자들에게 제공하는 서블릿 컨테이너를 말함.
	- javax.servlet 패키지에서 제공하는 Filter 인터페이스를 상속받아서 구현해야 함.

	요청(Request) 필터:
	- 인증(사용자 인증)
	- 요청 정보를 로그 파일로 작성
	- 암호화 인코딩 작업 등의 기능을 처리

	응답(Response) 필터:
	- 응답 결과 데이터 압축
	- 응답 결과에 내용 추가/수정
	- 총 서비스 시간 측정

	url 패턴
	/* => 전체 페이지
	*.do => 앞의 url 주소가 무엇이든 상관없지만 끝나는 주소가 반드시 .do로 끝나는 요청이 들어올 때
	/abcFilter => 반드시 url주소가 /abcFilter로 요청이 들어와야함.

	web.xml 기술형식(init-param 태그 생략 가능):
	<filter>
		<filter-name>필터객체명</filter-name>
		<filter-class>패키지경로들.필터클래스명</filter-class>
		<init-param>
			<param-name>파라미터명</param-name>
			<param-value>파라미터값</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>필터객체명</filter-name>
		<url-pattern>/url패턴기술</url-pattern>
	</filter-mapping>

	@어노테이션 기술형식:
	@WebFilter(
		filterName = "필터명",
		urlPatterns = {"/url패턴"},
		initParams = {
			@WebInitParam(name = "파라미터명", value = "파라미터값")
		}
	)

8교시
17:50
	web.xml 기술순서
	<display-name>
	<description>
	<context-param>
	<filter>
	<filter-mapping>
	<listener>
	<servlet>
	<servlet-mapping>
	<welcome-file-list>: 맨 마지막에 기술하거나 error-page 순서 전에 기술
	<error-page>: 맨 마지막에 기술하거나 welcom-file-list 순서 전에 기술