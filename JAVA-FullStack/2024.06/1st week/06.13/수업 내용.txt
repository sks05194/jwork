※ 시간 순서에 따라 기술되었습니다.

1교시
09:30	복습


09:40	라벨분기문
	- 반복문에 이름을 붙이고( (라벨명): ) 이후 조건문의 실행문에 적는다. ( continue (라벨명); 또는 break (라벨명); )
	- 라벨은 해당하는 반복문 바깥에서는 사용할 수 없다.


10:05	배열
	- 변수 : 변할 수 있는 마지막 값 한 개만 가질 수 있는 공간 또는 값. 기본 자료형으로 만들 수 있다.
	- 객체(Object) : 독립적인 대상이 되는 것을 객체. 값을 직접 가지고 있지 않고 주소값을 참조해서 가지고 있는 대상
	- 객체 지향 언어(OOP - Object Oriented Programming Language)



2교시
10:30	배열
	- 같은 자료형을 가진 여러 개의 요소를 묶어 놓은 집합체
	- 고정 칸 수이다. (칸수 변경을 할 수 없다.)
	
	형식
	- 선언
	자료형[] 변수명; 또는 자료형 변수명[];
	예) int[] a; int a[];

	- 공간 생성/ 초기화
	변수명 = new 자료형[]{ 값1, 값2, …};
	예) int[] a = new int[]{ 1, 5, 3 };
	a = new int[]{ 1, 5, 3 };
	a[] = new int[]{ 1, 5, 3 };
	int a = { 1, 5, 3 };

	- 선언 및 공간 생성(메모리 할당)
	자료형[] 변수명 = new 자료형[방개수];
	예) int[] a = new int[5];

	- 초기화
	변수명[인덱스번호(방번호)] = 값;
	예) a[0] = 5; a[1] = 1; ...

	- 단축형식(선언 및 공간생성/초기화)
	자료형[] 변수명 = { 값1, 값2, ... };
	예) int[] a = { 10, 20, 30, 100, 50 };

	new 키워드 : 주소를 할당해주세요. 공간을 생성해주세요.
	length 키워드 : 배열의 길이

	배열의 시작의 인덱스는 0이다.

	변수명.length : 변수의 칸 수

11:05	자료형의 자동초기화 값
	- 자료형이 기본적으로 가지고 있는 처음의 기본값
	  (지역변수는 자동초기화 값이 없다.)
	byte, short, int = 0
	long = 0L
	float = 0.0f
	double = 0.0
	boolean = false
	char = \u0000 = 공백한칸
	String, Scanner...등(참조변수=클래스급이상) = null


	변수 인덱스 없이 그대로 출력시키면 주소에 대한 해시값이 출력됨.



3교시
11:50	for확장문
	for( 요소의 자료형으로 만든 변수의 선언문 : 여러 개의 값이 나열된 객체 )
	for문은 index 요소를 사용해야 할 필요가 있을 경우 사용하며 for 확장문은 index 요소를 사용하지 않아도 되는 경우에 사용한다.


4교시
12:30	클래스
	같은 패키지 내의 서로 다른 클래스 내의 메인 메서드가 있을 경우 각 메인 메서드를 따로 작동시키는 것이 가능하다.


13:05	Ctrl + 마우스 클릭 : 선택한 메서드 코드


13:00	이차원배열 : 행과 열로 이루어진 배열(바둑판)

	- 선언 및 행렬 공간할당
	자료형[][] 변수명 = new 자료형[행개수][열개수];
	예) int[][] a = new int[2][3];

	- 초기화
	변수명[행인덱스번호][열인덱스번호] = 값;
	예) a[0][0] = 1; a[0][1] = 2; ...

	- 선언 및 행공간할당
	자료형[][] 변수명 = new 자료형[행개수][];
	예) int[][] a = new in[2][];

	- 열공간할당 : 행마다 다른 칸 수로 지정할 수 있다.
	변수명[행인덱스번호] = new 자료형[열인덱스번호];
	예) a[0] = new int[5];

	- 초기화
	변수명[행인덱스번호][열인덱스번호] = 값;
	예) a[0][2] = 7;

	- 단축형식(선언 및 공간생성/초기화)
	자료형[][] 변수명 = { { 값1, 값2, ... }, { 값1, 값2, ... }, ... };
	예) int[][] a = { { 1, 2, 3, 4, 5 }, { 6, 7, 8 } };


5교시
14:35	length는 행 개수를 반환한다.
	예) a.length; a[0].length;
	
	이차원 배열의 각 행마다 각각 다른 칸 수로 지정해줄 수 있다.



6교시
7교시
16:50	얕은 복사 : 주소값을 복사해 온다.
	복사본의 데이터가 변경되는 경우 원본도 변경이 된다.

	깊은 복사 : 값을 복사해 온다.
	복사본의 데이터가 변경되더라도 원본의 데이터는 변경되지 않는다.
	
8교시
17:55	클래스
	- 자바에서 데이터를 생성할 수 있는 최소단위
	- 여러 자료형의 데이터를 담을 수 있다.
	- 필요한 기능을 만들 수 있다.
	- 모듈의 최소단위이기도 함.
	- 객체를 만들 수 있는 최소단위.

	- 속성( = 멤버변수, 필드, Attribute, property, 컬럼(column))
	- 기능( = 메서드) : 한꺼번에 묶어놓은 집합체 ( = 모듈(module) )

	- 형식
	public class 클래스명 { 
		// 속성 => 변수, 상수, 객체 선언(초기화)
		// 기능 => 메소드 선언문
		// 기능 => 생성자 선언문
		// 기능 => 초기화 블록
	}

	- 메서드 선언문 형식
	public static 리턴타입(반환타입) 메소드명(매개변수 선언...){
		// 실행 코드들; ...
		return 리턴할_값;	// 생략 가능
	}

	메소드 선언문(호출대상)
	메소드 호출문(호출자) : 메소드 실행, 메소드에서 반환값을 받는 공간.