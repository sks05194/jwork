※ 시간 순서에 따라 기술되었습니다. 코드는 폴더 내의 code.txt를 참고하세요

1교시
9:40	기본 자료형의 형변환(Type Casting) : 
	정수 : byte(1) < short(2) < int(4) < lont(8)

	-조건 : 
	암묵적형변환 = 자동형변환(Up Casting)
	숫자 자료형의 경우 : 용량이 작은 값을 용량이 큰 값을 가질 수 있는 변수에 넣을 수 있다.
	단 정수형 자료형을 실수형 자료형으로 형변환 시 값 손실이 일어날 수 있다.


10:00	고정소수점
	부동소수점


10:10	명시적 형변환 = 강제형변환(Down Casting) : 값 손실이 일어난다.
	자신의 자료형보다 작은 자료형으로 변환하는 경우
	- 조건 : 반드시 변환하고자 하는(값을 받는 곳의) 자료형으로 캐스트연산자를 사용하여 변환해주어야 한다.
	캐스트연산자(Cast Operation) : (변환하고자 하는 자료형)



2교시	
10:50	전위연산자와 후위연산자에 대한 설명



3교시	
11:55	혼합대입연산자(+=, -=, *=, /=, %=)
	혼합대입연산자 : 결합(+=)
	
	
	
4교시	
12:30	비교연산자


12:45	논리연산자
	- 논리곱(&& => AND : ~이고) : 모든 항이 true인 경우만 true
	- 논리합(|| => OR : ~이거나) : 모든 항이 false인 경우면 false


13:00	논리연산 : 단축연산



5교시
14:00	아스키코드, 유니코드 UTF-8



6교시
15:35	이스케이프 문자 : \로 시작하는 특수한 기능을 수행해주는 문자, 반드시 문자열 안에 기술해야 한다.
	형식 : \ + 이스케이프명

	\t : 탭 1개 기능 수행
	\n : 엔터 1개 기능 수행(줄바꿈)
	\' : ' 출력
	\" : " 출력
	\\ : \ 출력


15:45	서식지정자 : 정해진 형식대로 넣어야하는 곳에 %로 시작하는 명령어
	- 반드시 문자열 안에 기술해야 한다.
	- 반드시 System.out.printf(" "); // printf 메소드 호출문 안에서만 사용이 가능하다.
	- 서식지정자의 갯수와 순서, 자료형에 따라서 그만큼의 대응되는 값이 존재해야 한다.

	반드시 대응값이 존재해야 하는 서식지정자
	- %c : char 자료형 값만 넣을 수 있습니다.
	- %f : 실수형 자료형 값만 넣을 수 있습니다.
	- %d : 정수형 자료형 값만 넣을 수 있습니다.
	- %s : 문자열(String) 자료형 값만 넣을 수 있습니다.

	대응값이 존재하지 않아도 되는 서식지정자
	- %n : 이스케이프의 \n과 동일 = 줄바꿈기능
	- %% : % 출력


16:05	상수 : 값이 한 번 들어오면 절대 변경할 수 없는 수(공간)
	명명규칙 : 영어는 전부 대문자로 사용(스네이크 기법)
	선언과 동시에 초기화까지 해야 한다.

7교시
16:30	println, printf, print 메서드의 차이점
	- print와 printf는 따로 기능이 존재하지 않기 때문에 println과 달리 매개변수를 넣지 않으면 오류가 발생한다.


16:55	서식지정자(심화)
	- %d : 10진수
	- %o : 8진수
	- %x : 16진수(소문자)
	- %X : 16진수(대문자)
	- %s : 문자열
	- %f : 실수
	- %.(정수)f : 소수점 아래 (정수) 자리수만큼 출력
	- %(정수)d : (정수)자리수만큼 확보 후 양수면 우측, 음수면 좌측 정렬
		(d 말고 o, x, s, c, f도 가능하다)
	- %,d : 자리수 구분


17:15	주석 단축키(Ctrl + / 또는 Ctrl + Shift + C)



8교시
17:30	선택구조: 조건문: 조건에 의해 처리하는 실행문의 흐름을 제어하는 명령문
	(if문, if~else문, if~else if~else문)