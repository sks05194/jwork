※ 시간의 순서에 따라 기술되었습니다.

1교시
09:45   집계함수
    - 테이블 내의 행들에 대해서 연산한 후 단 하나의 결과 값으로 되돌리는 함수로서 SUM(합계), AVG(평균), MAX(최대값), MIN(최소값), COUNT(행 수 카운트)등이 있습니다.
    - 집계함수는 널 값( = 빈문자열값포함)을 제외한다.

    - 조건 : 
        where절에는 집계함수를 쓸 수 없다.
        having절에는 집계함수를 쓸 수 있다.
        group by 절이 없는 select절에 사용하는 경우에는 컬럼을 기술할 수 없다.
    
    // 집계함수 사용 예시 코드

10:05   GROUP BY절 : 데이터의 중복을 제거하고, SELECT절에 집계함수와 컬럼을 같이 기술하고자 하는 경우 사용
    조건: GROUP BY절에는 그룹함수, 그룹으로 묶고자하는 컬럼명을 기술할 수 있다.
    단, GROUP BY절을 이용하는 경우에는 SELECT절에 들어올 수 있는 컬럼은 GROUP BY절에 기술한 컬럼만 기술 가능하다.

2교시
10:50   SELECT절 형식
    SELECT [DISTINCT] 컬럼 | 집계함수 | *
    FROM 테이블
    WHERE 행조건
    GROUP BY 그룹으로 묶어야하는 컬럼명 | 그룹함수
    HAVING 집계함수조건 또는 GROUP BY절의 결과에 조건을 걸어야하는 것
    ORDER BY 컬럼정렬순서;

3교시
11:35   DUAL 테이블
    - 산술 연산이나 가상 칼럼 등의 값을 한 번만 출력하고 싶을 때 유용하게 사용할 수 있는 테이블로서 DUMMY라는 칼럼 한 개로 구성되어 있다.

11:40   숫자 함수
    - CEIL (소수점 아래를 버리고 정수자리수 무조건 올림) : CEIL(실수값)
    - FLOOR (소수점 아래를 버림) : FLOOR(실수값)
    - ROUND (특정 자릿수에서 반올림) : ROUND(실수값), ROUND(실수값, 소수점자리수)
    - MOD (나머지) : MOD(피젯수, 젯수)

12:05   문자 함수
    - LOWER (소문자로 변환), UPPER (대문자로 변환)
    - 형식
        LOWER('변환할문자열값' 또는 변환할컬럼명) : 모두 소문자로
        UPPER('변환할문자열값' 또는 변환할컬럼명) : 모두 대문자로

12:15   문자열 
    - CONCAT(첫문자열, 두번째문자열) : 두 개의 단어만 결합가능

4교시
12:35   문자열
    - LENGTH('문자열값' 또는 컬럼명) : 글자의 개수
    - SUBSTR(대상, 시작위치, 추출할 개수) => SUBSTR('문자열값' 또는 컬럼명, 시작번호, 추출할 개수)
        시작번호가 음수인 경우 : 오른쪽 -> 왼쪽
        시작번호가 양수인 경우 : 왼쪽 -> 오른쪽

13:00   문자열
    - INSTR : 특정 문자의 위치를 반환
        INSTR(대상, 찾을 글자, 시작위치, 몇 번째 발견)
            시작위치 : 음수(역), 양수(정)
            3, 4번째 매개변수는 생략 가능하며 생략할 경우 각각 1이 들어간다.
    
13:15   문자열
    특정 기호로 채우기
    : 지정된 칸수만큼 만든 후
    - LPAD('문자열값' 또는 컬럼명, 칸수, '채울문자열값')
        => 해당 문자열을 오른쪽 정렬로 배치한 뒤
        => 왼쪽에 비어있는 칸은 채울 문자열로 넣는다.
    - RPAD('문자열값' 또는 컬럼명, 칸수, '채울문자열값')
        => 해당 문자열을 왼쪽 정렬로 배치한 뒤
        => 오른쪽에 비어있는 칸은 채울 문자열로 넣는다.

5교시
14:35   문자열
    - TRIM : 특정 문자 잘라내기
        LTRIM('문자열값' 또는 컬럼명, '자를 문자열') : 자를 문자열에 해당되는 문자열이 존재하면 해당 문자열의 왼쪽에 연속되어있는 문자열만 제거함.
        RTRIM('문자열값' 또는 컬럼명, '자를 문자열') : 자를 문자열에 해당되는 문자열이 존재하면 해당 문자열의 오른쪽에 연속되어있는 문자열만 제거함.
        TRIM('자를 문자열' FROM '해당 문자열 값' 또는 컬럼명)

14:45   일반함수
    - NVL(해당컬럼, null일때 돌려줄 값) : 첫번째 인자값이 null과 값으면 두번째 인자값으로 변경
        조건 : 첫번째 인자의 자료형에 맞는 값으로 두번째 대체인자 값을 지정해주어야 한다.
    - NVL2(해당컬럼, null이 아닐때 돌려줄 값, null일때 돌려줄 값)
    - COALESCE(데이터, 데이터, ... ) : 데이터가 null이 아닌 것의 첫번째 값을 반환

15:20   산술관련
    - POWER(N,M) : N의 M제곱승, SQRT(N) : N의 루트(제곱근)값

6교시
15:30   
    슈도컬럼 (Psudo) : 오라클에서 제공하는 의사컬럼을 말함.
    처음에는 값이 정해져있는 것이 없다가 실행하는 순간 값을 가지게 되는 컬럼을 말함.

    자료형 : DATE(년/월/일 => 시:분:초), TIMESTAMP(년/월/일 시:분:초.나노세컨드초)
    SYSDATE : DATE자료형과 동일함. 문자형 값도 가지고 있다.
    SYSTIMESTAMP : TIMESTAMP 자료형과 동일함. 문자형 값을 가지고 있지 않다.

15:45   ROUND 함수의 다양한 적용


15:55   TRUNC 함수의 다양한 적용

15:55   TO_CHAR(데이터, '출력형식') : 
    해당 데이터를 출력형식대로 문자형자료형 값으로 변환하는 함수
    데이터 : 숫자값, 날짜값
        문자형 값은 넣을 수 없다.

7교시
16:40   TO_DATE(데이터, '출력형식')
    데이터 : 날짜형으로 변경 가능한 문자열 값만 가능
    문자형 데이터를 날짜형으로 출력형식에 맞춰서 출력해주는 함수.
    출력형식 = D : 요일을 숫자로 반환 1-일요일, 2-월요일, ...

    NEXT_DAY

17:10   TO_NUMBER(데이터, '출력형식')

8교시
17:30   JAVA의 switch~case문과 유사
    - DECODE문 형식 :
        DECODE (
            컬럼명,
            케이스1, '출력값1',
            케이스2, '출력값2',
            ...,
            '마지막값'
        ) [AS 별칭명]
    
    JAVA의 switch~case문과 유사
    - CASE문 형식 1:
    CASE    컬럼명
            WHEN 케이스1 THEN 값1
            WHEN 케이스2 THEN 값2
            ...

            [ELSE 값N]
    END [AS 별칭명]

    - CASE문 형식 2: JAVA의 IF ~ ELSE IF ~ ELSE문과 유사
    CASE
            WHEN 조건1 THEN 값1
            WHEN 조건2 THEN 값2
            ...

            [ELSE 값N]
    END [AS 별칭명]