※ 시간의 순서에 따라 기술되었습니다.

1교시
10:05
	window.open(...)함수 : 자바스크립트에서 제공해주는 팝업창을 만들어주는 기능.
	window.open(url, name or attribute, specs, replace);

	형식) var objectName = window.open(url, name, specs, replace);
	예시 => var newWin = window.open(url, name, specs, replace);

	1. 반환값(return value) : 
	새로 만들어진 창 객체가 반환됨.
	창 생성에 실패하면 null을 반환함.
	window.open()함수를 객체로 대입을 받는 경우,
	객체를 통해서 새창을 제어할 수 있다.
	예) newWin.close(); // 창을 닫을 수 있다.

	2. url :
	새 창에 보여질 주소임.
	선택적인 값으로 비워두면 빈창(about:blank)이 보인다.

	3. name 또는 창 속성 지정 :
	name을 기술할 경우 : 해당 창의 title이 된다.
	창 속성을 기술할 경우 :
	- _blank : 새 창에 열리도록 지정.(기본값)
	- _parent : 부모 창에서 열리도록 지정.
	- _self : 현재 페이지에서 열리도록 지정(페이지가 변경되는 효과).
	- _top : 처음 로드된 최고 조상창에서 열리도록 지정.

	4. specs :
	선택적인 값 : 창 크기, 스크롤 여부, 리사이즈 기능들의 속성을 지정한다.
	- height=pixels : 창의 높이를 지정한다.(예: height=600)
	- width=pixels : 창의 너비를 지정한다.(예: width=500)
	- left=pixels : 창의 화면 왼쪽에서의 위치를 지정한다. 양수만 사용.
	- top=pixels : 창의 화면 위쪽에서의 위치를 지정한다. 양수만 사용.
	- menubar=yes|no|1|0 : 메뉴바 사용여부를 지정합니다.
	- status=yes|no|1|0 : 상태바를 보여줄지 지정한다.
	- titlebar=yes|no|1|0 : 타이틀바를 보여줄지 지정한다.

	5. replace :
	히스토리 목록에 새 항목을 만들지 현재 항목을 대체할지에 대한 여부를 지정한다.
	- true : 현재 히스토리를 대체한다.
		(현재 크롬이나 높은 버전의 브라우저에서 적용 불가)
	- false : 히스토리에 새 항목을 만든다.(디폴트 값)

	예1) var win = window.open("./popup.html", "PopupWin", "width=500, height=600");
	예2) var win = window.open("", "PopupWin", "width=500, height=600");
		win.document.write("<p>새창에 표시될 내용 입니다.</p>);
	예3) var win = window.open(
		".popup.html",
		"_blank",
		"toolbar=yes,scrollbars=yes,resizable=yes,top=500,left=500,width=400,height=400"
	);

4교시
13:00
	css가 적용되는 범위의 순서(작은 순부터 큰 순서로)
	인라인 < 내부 < 외부

	css가 적용되는 우선 순위의 순서(큰 것 부터 작은 순서로)
	인라인 > 내부 > 외부

5교시
15:15
	form 요소들: 사용자가 입력한 데이터를 서버로 전송하기 위해 사용하는 태그들임.

	기술형식(문법 = Syntax):
	<form [action="데이터를 전송할 페이지 경로 기술(기본값: 자신의 페이지 경로)" method="데이터 전송 방식(기본값: get)" target="이동할 페이지를 어떠한 상태로 보일지를 결정(기본값: _self)" autocomplete="on(기본값) 또는 off값"]>
	<input type="타입속성명" 속성명="값" 속성명="값" style="속성명:값; 속성명:값; ... ">
	<select 속성명="값" 속성명="값" style="속성명:값; 속성명:값; ... ">
	...
	</select>
	...
	<button type="submit">전송</button>
	</form>

	* 서버 또는 다른 페이지로 데이터를 전송하기 위한 조건
	1. 입력 요소들을 반드시 form 태그로 묶어야 한다.
	2. 입력한 요소에 반드시 name 속성이 기술이 되어야 한다.
	3. 입력한 요소를 전송할 수 있는 submit 버튼이 존재해야 한다.

	get 방식으로 전송하는 데이터는 url 뒤에 쿼리스트링 방식으로 전송한 데이터를 키(name)와 값(value)의 쌍으로 붙여서 보낸다.
	예) http://localhost:8080/abc/def.html?id=admin&pw=1234

	<input type="text" name="id" value="admin">
	<input type="password" name="pw" value="1234">

7교시
17:05
	select 태그 형식:
	<select name="값" 속성명="값" 속성유형>
		<option value="값">내용</option>
		<option value="값">내용</option>
		<option value="값">내용</option>
		... 또는
		<option>값</option>
	</select>