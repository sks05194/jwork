테이블 : EMPLOYEES , DEPARTMENTS 
1. 사원번호 , 사원명 별칭 NAME , 부서번호, 부서명이 출력되도록 
  처리해주세요.

2. 사원번호, 부서번호, 부서명, 상위부서명을 출력하는데,
  부서를 할당받지 못한 인턴사원까지 출력해주세요.

3. 사원번호, 사원명 별칭 NAME, 부서번호, 부서명을 출력하는데, 
--사원이 할당되지 않은 부서에 대해서도 출력해주세요.

4. 테이블: EMPLOYEES , JOB_HISTORY , JOBS
JOB_HISTORY 테이블의 START_DATE (해당 직책이 시작된 일자), END_DATE(해당 직책이 종료된 일자)
JOBS :  JOB_ID : 직책아이디,  JOB_TITLE : 직책명
--직책이 변경된 직원의 사원번호, 사원명 별칭 NAME, 부서번호, 부서명, 직책명, 해당 직책이 시작된 일자,  해당 직책이 종료된 일자를 출력해주세요.
(사번 오름차순, 시작일자 오름차순으로 정렬해주세요.)

5. 테이블: EMPLOYEES, JOBS
JOBS테이블의 JOB_ID : 직책아이디, JOB_TITLE : 직책명, MIN_SALARY : 최소 연봉, MAX_SALARY: 최대연봉
--'Nancy Greenberg'가 받을 수 있는 사원번호, 사원명, 최대연봉과 최소 연봉, 직책아이디, 직책명을 사원번호 오름차순으로 출력하세요.




--1번
SELECT E.EMPLOYEE_ID, E.FIRST_NAME || ' ' || E.LAST_NAME NAME,
D.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID;

SELECT E.EMPLOYEE_ID, E.FIRST_NAME || ' ' || E.LAST_NAME NAME,
D.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E
JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

--2번
SELECT E.EMPLOYEE_ID, E.FIRST_NAME || ' ' || E.LAST_NAME NAME,
D.DEPARTMENT_ID, D.DEPARTMENT_NAME, 
(SELECT D2.DEPARTMENT_NAME FROM DEPARTMENTS D2 
WHERE D2.DEPARTMENT_ID = D.MANAGER_ID) MGR_NM
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID(+);

SELECT E.EMPLOYEE_ID, E.FIRST_NAME || ' ' || E.LAST_NAME NAME,
D.DEPARTMENT_ID, D.DEPARTMENT_NAME, 
(SELECT D2.DEPARTMENT_NAME FROM DEPARTMENTS D2 
WHERE D2.DEPARTMENT_ID = D.MANAGER_ID) MGR_NM
FROM EMPLOYEES E
LEFT OUTER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;


--3번
SELECT E.EMPLOYEE_ID, E.FIRST_NAME || ' ' || E.LAST_NAME NAME,
D.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID(+) = D.DEPARTMENT_ID;

SELECT E.EMPLOYEE_ID, E.FIRST_NAME || ' ' || E.LAST_NAME NAME,
D.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E
RIGHT OUTER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

--4번
SELECT 
E.EMPLOYEE_ID,  E.FIRST_NAME || ' ' || E.LAST_NAME NAME ,
J.JOB_TITLE ,JH.START_DATE , JH.END_DATE
FROM EMPLOYEES E, JOB_HISTORY  JH, JOBS J
WHERE E.EMPLOYEE_ID = JH.EMPLOYEE_ID 
AND Jh.Job_Id = J.Job_Id 
ORDER BY E.EMPLOYEE_ID, START_DATE;


SELECT 
E.EMPLOYEE_ID,  E.FIRST_NAME || ' ' || E.LAST_NAME NAME ,
J.JOB_TITLE ,JH.START_DATE , JH.END_DATE
FROM EMPLOYEES E
JOIN JOB_HISTORY  JH
ON E.EMPLOYEE_ID = JH.EMPLOYEE_ID 
JOIN JOBS J
ON Jh.Job_Id = J.Job_Id 
ORDER BY E.EMPLOYEE_ID, START_DATE;

--5번
SELECT E.EMPLOYEE_ID, E.FIRST_NAME || ' ' ||E.LAST_NAME, 
J.MAX_SALARY, J.MIN_SALARY, J.JOB_ID, J.JOB_TITLE
FROM EMPLOYEES E, JOBS J
WHERE E.JOB_ID = J.JOB_ID AND  (E.FIRST_NAME || ' ' ||E.LAST_NAME)='Nancy Greenberg'
;



SELECT E.EMPLOYEE_ID, E.FIRST_NAME || ' ' ||E.LAST_NAME, 
J.MAX_SALARY, J.MIN_SALARY, J.JOB_ID, J.JOB_TITLE
FROM EMPLOYEES E
JOIN JOBS J
ON E.JOB_ID = J.JOB_ID 
WHERE  (E.FIRST_NAME || ' ' ||E.LAST_NAME)='Nancy Greenberg';



















