※ 시간의 순서에 따라 기술되었습니다.

1교시
09:50   DML (=데이터조작어) : 
    원본 변경이 생김
    자동확정이 되지 않는다.(임시저장)
    반즈시 자동확정이나 되돌리기를 해주어야만 합니다.

    INSERT(삽입) : 새로운 행을 추가한다.
    UPDATE(변경) : 기존의 행의 데이터를 변경한다.
    DELETE(삭제) : 기존의 행을 삭제한다.

    INSERT 형식
    1. 정식형식: 내가 원하는 컬럼만 지정해서 값을 넣을 수 있다.

    INSERT INTO 테이블
    (컬럼명1, 컬럼명2, ... )
    VALUES
    (컬럼1에대응되는값1, 컬럼2에대응되는값2, ...);

    desc emp; -- 테이블의 구조를 확인하는 명령문
    2. 단축형식 : 반드시 전체 컬럼을 컬럼의 순서대로 나열해야 한다.
    INSERT INTO 테이블명
    VALUES
    (컬럼1에대응되는값1, 컬럼2에대응되는값2, ..., 마지막컬럼에대응되는값);

    테이블 생성
    
    NUMBER(n, m) : n(자리수), m(소수점자리수)

2교시
10:45   F5 : 모든 줄 실행

10:45   UPDATE 명령문:
    UPDATE 테이블명
    SET COL1 = 값1, COL2 = 값2, ...
    WHERE SELECT문의 조건과 기술 동일함.

    한 번 커밋이나 롤백이 되면 다시 되돌릴 수 없다.

3교시
11:45   DELETE문 : 

    형식 : DELETE FROM 테이블명 WHERE 행조절조건;

5교시
14:35   DDL : (DATA DEFINITION LANGUAGE : 데이터 정의어)
    : 자동 커밋을 가지고 있다.
    사용자 계정, 테이블, 인덱스, 뷰 등등의 데이터 이상급의 설정에 대해 생성, 삭제, 변경을 할 수 있는 언어( = 명령문)
    생성 : CREATE
    삭제 : DROP
    변경 : ALTER

    사용자계정 : CREATE USER 사용자계정명 IDENTIFIED BY 비밀번호;

    테이블생성 형식 : 
    - 정식 형식 : 
    CREATE TABLE 테이블명(
        컬럼명1 자료형 [제약조건들...],
        컬럼명2 자료형 [제약조건들...],
        ...,
        컬럼명n 자료형 [제약조건들...]
    );

    - 복사 형식 : 다른 테이블을 복사해서 만드는 형식
    CREATE TABLE [스키마명.]테이블명
    AS SELECT * FROM [스키마명.]테이블명;

    ** 스키마(SCHEMA) : 데이터베이스의 전반적인 구조 = 사용자계정명
    사용자계정정보, 제약조건, 테이블 구조, ...

    테이블 삭제 :
    DROP TABLE 테이블명 [CASCADE CONSTRAINTS] [PURGE];

14:55   자료형 - 데이터타입, 컬럼(속성)에 들어갈 데이터의 유형을 결정한다.
    * 문자형
        CHAR(크기[BYTE] | CHAR) (고정형 문자 자료형) : 1~2000BYTE
        VARCHAR2(크기[BYTE] | CHAR) (가변형 문자 자료형) : 1~4000BYTE
        LONG : 가변형 문자 자료형 : 최대 2GB까지 표현 가능(권장하지 않음. 이전 버전과의 호환성을 위해 유지)
    
    * 숫자형 - 정수, 실수 포함
        NUMBER : 부동 소수점 자리수 숫자형
        NUMBER(정수값자리수) : 정수값으 자리 수를 지정
        NUMBER(소수점 제외 총 자리수, 소수점 자리수) : 정수값(총자리수 - 소수점자리수).지정한 소수점 자리수 (초과된 소수점은 반올림으로 처리됨)

    * 날짜형
        DATE : 년/월/일 시:분:초까지 입력 가능한 날짜형 자료형
        TIMESTAMP : 년/월/일 시:분:초.나노세컨드초 까지 입력 가능한 날짜형 자료형

    BIG DATE TYPE (LARGE OBJECT TYPE)
        BLOB : BINARY LARGE OBJECT -> 이진데이터 전용 큰 사이즈를 기술할 수 있는 자료형(최대 1BYTE ~ 4GB까지 가능)
        CLOB : CHARACTER LARGE OBJECT -> 가변 길이 문자데이터 전용 큰 사이즈를 기술할 수 있는 자료형 (최대 4GB-1BYTE까지 가능)
        ** 데이터 입력과 출력이 쉽지 않아 사용을 권장하지 않는 자료형이다.

15:05   도구 - 환경설정 - 데이터베이스- 객체뷰어 - 객체 뷰어 창 자동 고정

6교시
15:40
    데이터를 삽입, 변경, 삭제
    INSERT, UPDATE, DELETE => auto commit 안됨

    데이터 이상급의 생성, 변경, 제거
    CREATE, ALTER, DROP => auto commit 가능.

    테이블의 구조 변경(ALTER TABLE 테이블명)
    컬럼추가(ADD), 수정(MODIFY), 삭제(DROP)
    컬럼추가형식:
    ALTER TABLE 테이블이름
    ADD (컬럼이름 데이터타입 [제약조건들], ...);
    **만약 추가하는 컬럼이 한 개인 경우는 소괄호 생략 가능.

    -- 기존 칼럼 수정 (데이터 타입 변경 조건)
        타입을 변경하는 경우는 반드시 데이터가 아무것도 존재하지 않아야 한다.
        -- 해당 칼럼에 자료가 없는 경우 : 컬럼의 데이터타입과 크기 변경 가능
        -- 해당 칼럼에 자료가 있는 경우 : 컬럼의 데이터타입은 변경할 수 없고, 크기는 늘릴 수 있다. (기존 크기보다 작은 크기로 변경 불가능)
            숫자형 컬럼은 크기를 줄일 수 없다.
    ALTER TABLE 테이블이름
    MODIFY (컬럼이름 데이터타입 [제약조건들], ...);

    -- 컬럼 이름 변경 형식:
    ALTER TABLE 테이블이름
    RENAME COLUMN 변경해야하는컬럼명 TO 변경할이름;

    - 기존 컬럼 삭제 형식:
    - 한 개의 컬럼만 삭제할 경우
    ALTER TABLE 테이블이름
    DROP COLUMN 컬럼이름;
    - 여러 개의 컬럼을 삭제할 경우
    ALTER TABLE 테이블명
    DROP (컬럼명, 컬럼명, ...);

7교시
16:30
    DQL : DATA QUERY LANGUAGE
    SELECT
    DML : DATA MANIPULATION LANGUAGE
    INSERT, UPDATE, DELETE
    DDL : DATA DEFINITION LANGUAGE
    CREATE, DROP, ALTER

    -- 서브쿼리 : 하나의 SQL 문에 포함되어 있는 또 다른 SQL 문들을 지칭함.
    (메인쿼리와 서브쿼리의 관계가 존재함)
    -- 서브 쿼리를 이용하여 테이블의 구조 뿐만 아니라 데이터까지 복사해 새로운 테이블을 생성하거나 다른 테이블과의 임시적인 조인, 가상뷰 생성 등을 처리할 수 있다.

17:00
    -- RENAME (테이블명 변경)
    RENAME OLD_TABLE_NAME TO NEW_TABLE_NAME;
    
    ALTER TABLE OLD_TABLE_NAME
    RENAME TO NEW_TABLE_NAME;

17:10
    * TRUNCATE TABLE (테이블의 모든 ROW를 제거)
    - DDL 명령 중에 유일하게 데이터를 조작하는 명령문
    - 내용만 제거됨. 단, 일부 내용 삭제는 불가. 모든 내용만 삭제 가능
    - 자동 commit되어 복구 불가능
    - 구성
    TRUNCATE TABLE 테이블이름;

8교시
17:30
    데이터 무결성 :
    * 무결 : 결점이나 결함이 없는 상태
    * 데이터 무결성이란 데이터베이스 내의 데이터에 대한 정확성, 일관성, 유효성, 신뢰성을 보장하기 위해 데이터 변경 혹은 수정 시 여러가지 제한을 두어 데이터의 정확성을 보증하는 것을 말한다. 관계형 관리시스템(RDBMS)에서는 설계 시 무결성을 고려한 설계로 데이터를 보호할 필요가 있다.

    제약조건(CONSTRAINTS): 데이터의 결함을 최소화하기 위해 데이터에 조건을 걸어두는 것

    * NOT NULL 제약 조건(필수로 입력해야한다는 조건)
    NULL 값 허용 불가 => 중복값 허용

    CREATE TABLE 테이블명 (
        컬럼1 자료형 NOT NULL,
        ...
    );

    * UNIQUE 제약 조건 (중복 불가, 유일한 값) => NULL값은 허용

    * PRIMARY KEY 제약조건 (UNIQUE + NOT NULL) : 중복값x, NULL값x
    => 유일한 값을 가지고 있는 컬럼에 적용하는 것이 좋은 제약조건임.
    1) 개체 무결성 (Entity integrity)
    모든 테이블이 기본 키(primary key)로 선택된 필드(column)를 가져야 한다. 기본 키로 선택된 필드는 고유한 값(Unique - 중복된 값을 허용 안 함)을 가져야 하며, 빈 값(Null)은 허용하지 않는다.
    - UNIQUE 제약 조건 또는 PRIMARY KEY 제약 조건을 설정하여 테이블의 기본 키나 식별자로 사용되는 열의 무결성을 강제하도록 한다.
    (대표적: PK(기본키, 주키), UNIQUE + NOT NULL)