※ 시간의 순서에 따라 기술되었습니다.

1교시
9:35
    제약조건
    정식형식, 단축형식
    - 단축형식 : 이름이 없고, 테이블 정의 시 컬럼명 자료형 뒤에 제약조건명만 기술하는 방식
    - 정식형식 :
        CONSTRAINT 제약조건이름 제약조건명
    - 위치 : 
        컬럼레벨방식 => 컬럼선언부의 자료형 뒤에 오는 경우
        테이블레벨방식 => 컬럼처럼 별도로 테이블 안에 선언되는 경우

        제약조건이름 : 테이블명_컬럼명_제약조건명
        
09:40
    * Data Dictionary (데이터 사전)
        - 데이터 딕셔너리는 데이터베이스 자원을 효율적으로 관리하기 위한 정보(메타 데이터)를 저장하고 있다.
        - 사용자는 데이터 딕셔너리의 내용을 직접 수정하거나 삭제할 수 없다.
        - USER_데이터 딕셔너리 : 사용자 계정이 소유한 객체 등에 관한 정보를 조회

    * 제약 조건 확인
    - P : PRIMARY KEY
    - R : FOREIGN KEY (REFERENCES)
    - U : UNIQUE
    - C : NOT NULL, CHECK

10:05
    키의 종류
    1) 슈퍼 키 (Super key)
    슈퍼 키는 테이블에 존재하는 필드들의 부분집합으로써, 유일성, 최소성(irreducibility)을 만족해야 한다.

    2) 후보 키 (Candidate key)
    후보 키는 이름에서도 나타나듯이 기본 키가 될 수 있는 후보를 말한다. 후보 키는 테이블에 존재하는 전체 필드의 부분집합으로써, 유일성(uniqueness)과 최소성(irreducibility)을 만족해야 한다. 유일성은 모든 레코드에서 해당 필드에 중복된 값이 나타나지 않는다는 속성이며, 최소성은 최소한의 필드로 레코드를 유일하게 구별할 수 있어야 한다는 속성이다.

    3) 기본키 = 주 키 (Primary key)
    기본 키는 테이블에서 특정 레코드를 구별하기 위해 후보 키 중에서 선택된 고유한 식별자를 말한다. 기본 키는 후보 키와 같이 유일성과 최소성에 대한 속성을 가져야 하며, NULL값을 가질 수 없다. 기본 키를 설정할 때는 아래와 같은 두 가지 사항을 고려하는 것이 좋다.

    값이 자주 변경되지 않는 것을 선택: 기본 키로 선택된 필드는 값이 변경될 때마다 해당 값이 유일한지, NULL값은 아닌지를 검사해야 하기 때문에 값이 자주 변경되지 않는 필드를 기본 키로 설정하는 것이 바람직하다.

    값이 단순한 것을 선택: 기본 키로 선택된 필드에 저장되는 데이터가 많은 자릿수를 갖는 정수거나 많은 문자를 포함하는 문자열이라면, 기본 키를 비교할 때 그만큼 많은 비용이 소모될 것이다. 그러므로, 짧고 단순한 형식의 데이터를 저장하는 필드를 기본 키로 설정하는 것이 DBMS의 성능 측면에서 유리하다.

    4) 대체 키 (Alternate key)
    후보 키 중에서 기본 키로 선택된 것들을 제외한 모든 키를 대체 키라고 한다.

    5) 복합 키 (Composite key)
    한 개 이상의 필드를 포함하는 키를 복합 키라고 한다.

    6) 외래 키 (Foreign key)
    외래 키는 한 테이블의 키 중에서 다른 테이블의 레코드를 유일하게 식별할 수 있는 키를 말한다. 외래 키는 한 테이블의 레코드에서 다른 테이블의 레코드를 참조하기 위해 이용된다.

2교시
10:45
    - 복합 키로 기본 키를 지정( = 슈퍼 키) :
        반드시 테이블 레벨 정의 방법 이용(컬럼 레벨 정의 방법 불가)

10:55
    CHECK 제약 조건 (값의 범위나 조건 지정)
    - 입력 값이 조건에 맞지 않으면 DB에서 받지 않는다. 오류
    - 입력 값의 범위를 지정 할 수 있다.
    - 입력할 수 있는 값의 범위를 설정해 줌
    - 정식 형식:
    컬럼명 자료형 CONSTRAINT [제약조건명] [제약조건유형](범위)
    예: DNO NUMBER(4) CONSTRAINT DEPT_DNO_CK CHECK (DNO BETWEEN 1000 AND 9999)
    - 단축형식:
    컬럼명 자료형 [제약조건유형] (범위)
    예: DNO NUMBER(4) CHECK (DNO BETWEEN 1000 AND 9999)
    ** 범위에는 WHERE절의 연산자 사용 가능

11:20
    제약조건 기술 순서는 상관없다.
    단, default 조건인 경우만 가장 맨 처음에 기술해야 한다.

3교시
11:35
    도메인 무결성(domain integrity) :
    열에 대한 데이터 무결성을 보장하기 위한 것으로 컬럼의 값이 널 값을 허용하지 않거나, 데이터 타입이 적절한지, 올바른 형식의 데이터가 저장되었는지 등을 확인하는 것이다.

    자료형, 체크(CHECK), 디폴트(DEFAULT), NOT NULL 등의 제약(constraints)들로 이러한 도메인 무결성을 보장할 수 있다.
    예를 들어, 생일 날짜 컬럼에 알파벳이 입력되는 경우 도메인 무결성을 위반하는 것이라 볼 수 있다.

    * 도메인 : 속성(Column) 하나가 가질 수 있는 모든 값의 집합.
    (대표적 : 자료형, DEFAULT 조건, CHECK 조건)

    검사 순서 : 자료형 -> 값의 유효성 -> 중복값

11:45
    * FOREIGN KEY (참조키, 외래키) 제약 조건 :
    부모자식관계( = 주종관계)가 존재하는 제약조건
    부모테이블에서 기본키로 설정된 컬럼을 자식테이블에서 참조하여 사용하는 조건
    - 부모테이블의 기본키에 존재하는 값만 사용가능하며, 단, 중복값을 허용한다.
    - null값도 허용 가능하다.
    - 식별관계(강한 결합) : 부모의 기본키를 자식테이블에서도 기본키로 사용하는 경우 (1:1)
    - 비식별관계(약한 결합) : 부모의 기본키를 자식의 일반컬럼으로 사용하는 경우 (1:n)

    부모테이블 : 컬럼들...
    자식테이블 : 컬럼들...

    부모테이블 (과목테이블)
    과목코드 : 기본키
    과목명
    교수명

    과목코드    과목명  교수명
    C01         국어    고길동
    C02         영어    마이콜
    C03         수학    도우너
    C04         과학    둘리
    C05         미술    또치

    자식테이블(수강테이블)
    수강번호 : 기본키
    학번
    이름
    과목코드 : 외래키
    과목명

    수강번호    학번    이름    과목코드    과목명
    1           001     윤여완  C01         국어
    2           001     윤여완  C02         영어
    ...
    5           002     손동진  C01         국어

12:05
    FOREIGN(외래키 형식) :
    단축형식 : REFERENCES 제약조건유형 부모테이블명(부모테이블기본키명)

    정식형식 : CONSTRAINT 제약조건이름 FOREIGN KEY(자식테이블의컬럼명) REFERENCES 부모테이블명(부모테이블기본키명)